---
import "./hero.scss";
---

<section id="inicio" class="hero">
  <div class="container">
    <div class="hero-content">
      <div class="hero-text">
        <div class="hero-badge">‚ú® La soluci√≥n m√°s completa</div>

        <h1 class="title-hero">
          Facturaci√≥n electr√≥nica f√°cil, r√°pida y confiable
        </h1>

        <p class="subtitle">
          Sistema completo de facturaci√≥n CFDI 4.0 con conciliaci√≥n bancaria,
          env√≠o por WhatsApp y todas las herramientas que necesitas para tu
          negocio.
        </p>

        <div class="hero-actions">
          <a
            href="https://app.solucionfactura.mx/register"
            class="btn btn-primary"
          >
            üöÄ Prueba Gratis
          </a>
          <a href="#caracteristicas" class="btn btn-outline">
            Ver Caracter√≠sticas
          </a>
        </div>
      </div>

      <div class="hero-visual">
        <div class="video-container">
          <!-- Thumbnail que se muestra inicialmente -->
          <picture>
            <source srcset="/thumbnail.webp" type="image/webp" />
            <img
              src="/thumbnail.webp"
              alt="Dashboard del sistema Soluci√≥n Factura - Vista de reportes y estad√≠sticas"
              class="video-thumbnail"
              width="650"
              height="365"
              loading="eager"
            />
          </picture>

          <!-- Video que se carga despu√©s -->
          <video
            src="/sf-video.mp4"
            class="hero-video"
            width="650"
            height="365"
            muted
            loop
            playsinline
            preload="none"
            style="display: none; opacity: 0;"
          >
            Tu navegador no soporta el video.
          </video>

          <!-- Bot√≥n de play opcional -->
          <div class="play-button" aria-label="Reproducir video">
            <svg width="64" height="64" viewBox="0 0 24 24" fill="white">
              <path d="M8 5v14l11-7z"></path>
            </svg>
          </div>
        </div>

        <style>
          .video-container {
            position: relative;
            width: 100%;
            max-width: 650px;
            aspect-ratio: 16/9;
            border-radius: 12px;
            overflow: hidden;
            cursor: pointer;
          }

          .video-thumbnail,
          .hero-video {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 12px;
            transition: opacity 0.5s ease;
          }

          .play-button {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.7);
            border-radius: 50%;
            width: 80px;
            height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
          }

          .play-button:hover {
            background: rgba(0, 0, 0, 0.8);
            transform: translate(-50%, -50%) scale(1.1);
          }

          .video-container.playing .play-button {
            opacity: 0;
            pointer-events: none;
          }

          @media (max-width: 768px) {
            .video-container {
              aspect-ratio: 16/9;
            }

            .play-button {
              width: 60px;
              height: 60px;
            }
          }
        </style>

        <script>
          document.addEventListener("DOMContentLoaded", function () {
            const container = document.querySelector(".video-container");
            const thumbnail = document.querySelector(".video-thumbnail");
            const video = document.querySelector(".hero-video");
            const playButton = document.querySelector(".play-button");

            // Auto-cargar video cuando sea visible
            const observer = new IntersectionObserver(
              (entries) => {
                entries.forEach((entry) => {
                  if (entry.isIntersecting) {
                    // Pre-cargar video en background
                    video.preload = "auto";
                    video.load();
                    observer.unobserve(container);
                  }
                });
              },
              {
                threshold: 0.1,
                rootMargin: "100px",
              },
            );

            observer.observe(container);

            // Funci√≥n para iniciar video
            function startVideo() {
              container.classList.add("playing");
              video.style.display = "block";

              video
                .play()
                .then(() => {
                  // Transici√≥n suave de thumbnail a video
                  setTimeout(() => {
                    video.style.opacity = "1";
                    thumbnail.style.opacity = "0";
                  }, 100);

                  // Ocultar thumbnail despu√©s de la transici√≥n
                  setTimeout(() => {
                    thumbnail.style.display = "none";
                  }, 600);
                })
                .catch(() => {
                  // Si falla el autoplay, mostrar solo el bot√≥n
                  console.log("Autoplay bloqueado");
                });
            }

            // Click en cualquier parte del contenedor inicia el video
            container.addEventListener("click", startVideo);

            // Tambi√©n auto-iniciar despu√©s de que el video est√© cargado
            video.addEventListener("canplaythrough", () => {
              // Auto-iniciar solo si est√° visible
              const rect = container.getBoundingClientRect();
              const isVisible =
                rect.top < window.innerHeight && rect.bottom > 0;

              if (isVisible) {
                setTimeout(startVideo, 1000); // Esperar 1 segundo despu√©s de cargar
              }
            });
          });
        </script>
      </div>
    </div>
  </div>
</section>
